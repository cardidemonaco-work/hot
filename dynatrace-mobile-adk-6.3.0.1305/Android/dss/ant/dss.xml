<?xml version="1.0" encoding="UTF-8"?>
<project name="Dynatrace_Crash_Desymbolication_Uploader" >

    <property file="dss.properties" />

    <path id="dss.path">
        <fileset dir="${dss.classpath}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef name="dssUpload" classname="com.dynatrace.diagnostics.dss.client.DssUploaderTask" classpathref="dss.path" />

    <target name="dssSetup" depends="-setVersionCodeAndName" />

    <!-- make sure all required properties have been set in dss.properties before we run -->
    <target name="-checkProperties" description="Ensure that all required properties have been set" depends="-checkSdkDir" >

        <condition property="missing-prop-file">
            <not>
                  <available file="dss.properties" />
            </not>
        </condition>

        <condition property="missing-jar-file">
            <not>
                  <available file="${dss.classpath}" />
            </not>
        </condition>

        <fail message="dss.properties is missing.  Please make sure dss.properties is present and try again." if="missing-prop-file" />
        <fail message="dss-client.jar file is missing.  Please set the location of dss.classpath in dss.properties and try again." if="missing-jar-file" />

        <fail unless="dss.username">Please set your username in dss.properties and try again.</fail>
        <fail unless="dss.password">Please set your password in dss.properties and try again.</fail>
        <fail unless="dss.server">Please set your server URL in dss.properties and try again.</fail>

    </target>

    <!-- check to see if the sdk.dir directory has been set by the Android build wrapper
         if so, we can use this to attempt to determine versionCode automatically with
         XPathTask and the XPath to versionCode -->
    <target name="-checkSdkDir" >
        <condition property="has-sdk-dir" else="false" >
            <isset property="sdk.dir" />
        </condition>
    </target>

    <!-- if sdk.dir has been set by the Android build wrapper, we can try to automatically
         pull the versionCode from AndroidManifest.xml -->
    <target name="-setVersionCodeAndName" if="${has-sdk-dir}" depends="-checkProperties" >

        <property name="android.antlibs" value="${sdk.dir}/tools/lib/ant-tasks.jar" />

        <taskdef name="xpath" classname="com.android.ant.XPathTask">
            <classpath>
                <pathelement location="${android.antlibs}" />
            </classpath>
        </taskdef>

        <xpath input="./AndroidManifest.xml" expression="/manifest/@android:versionCode" output="dss.manifest.versionCode" />
        <property name="dss.appname" value="${ant.project.name}" />

    </target>

</project>